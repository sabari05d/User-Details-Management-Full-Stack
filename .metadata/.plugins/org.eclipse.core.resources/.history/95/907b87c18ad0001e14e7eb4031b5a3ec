package org.jsp.UserApp.Controller;

import java.util.List;

import org.jsp.UserApp.Service.UserService;
import org.jsp.UserApp.dto.ResponseStructure;
import org.jsp.UserApp.dto.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping(value = "/Users")
public class UserController {
	@Autowired
	private UserService service;

	@PostMapping
	public ResponseStructure<User> saveUser(@RequestBody User u) {
		return service.saveUser(u);
	}

	@PutMapping
	public ResponseEntity<ResponseStructure<User>> UpdateUser(@RequestBody User u) {
		return service.updateUser(u);
	}

	@GetMapping(value = "/{id}")
	public ResponseEntity<ResponseStructure<User>> FindById(@PathVariable int id) {
		return service.findById(id);
	}

	@DeleteMapping(value = "/{id}")
	public ResponseEntity<ResponseStructure<String>> delete(@PathVariable int id) {
		return service.deleteUser(id);
	}

	@GetMapping
	public ResponseEntity<ResponseStructure<List<User>>> FindAll() {
		return service.findAll();
	}

	@PostMapping(value = "/verifyByPhone")
	public ResponseEntity<ResponseStructure<User>> verify(@RequestParam long phone, @RequestParam String password) {
		return service.Verify(phone, password);
	}

	@PostMapping(value = "/verifyByEmail")
	public ResponseEntity<ResponseStructure<User>> verify(@RequestParam String email, @RequestParam String password) {
		return service.Verify(email, password);
	}

	@GetMapping(value = "/findByName/{name}")
	public ResponseEntity<ResponseStructure<List<User>>> findByName(@PathVariable String name) {
		return service.verifyByName(name);
	}

	@GetMapping(value = "/email")
	public ResponseEntity<ResponseStructure<User>> findByEmail(@RequestParam String email) {
		return service.findUserByEmail(email);
	}

	@GetMapping(value = "/phone")
	public ResponseEntity<ResponseStructure<User>> findByPhone(@RequestParam long phone) {
		return service.findUserByPhone(phone);
	}
}
